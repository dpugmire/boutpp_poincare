Hi Dave,
 
Sorry for the delay. Attached are the Poincare plot (or particle tracing) scripts I previously used. The main file is “fieldline_tracing.m” which reads BOUT++ grid file and simulation data, evaluate perturbed magnetic field (get_apar_sc.m if shift circular configuration or get_apar_sn.m if single null configuration), then trace the field line along the unperturbed magnetic field-line direction with RK4 method (RK4_FLT1.m), and calculate the puncture points and save data (parsave.m and parsave8.m for saving under parfor loop) if needed. A separate script (poincare.m) for final Poincare plot.
 
In “fieldline_tracing.m”, there is a section define an analytical form of perturbation (line 256-284) bounding the perturbuation within the closed flux surface region. One may test the field-line tracing with this setting (comment out the BOUT++ data read-in at line 293-313) and the result should be similar to the attached animation – magnetic islands emerge, overlap at the rational surfaces, and eventually become chaotic as the perturbation amplitude increases.
 
Please let me know if you have any further questions.
 
Best,
Ben

Datafiles at NERSC:
/global/cfs/cdirs/m4491/ABOUND/data-for-adios

missing psi.sav file.



Hi Dave,
 
Em… I don’t think there is a psi.sav BOUT++ file for this particular KSTAR grid. For this KSTAR shot, I got the perturbed magnetic field information is from the GPEC code, mapping it to BOUT++ grid, and saving it in MATLAB’s .mat file. Sorry for the inconsistency, I put the required file (apar_kstar_30306_7850_psi085105_nx260ny128_f2_nz256.mat) to the same folder (/global/cfs/cdirs/m4491/ABOUND/data-for-adios/). You may also need to modify line 292-303 in fieldline_tracing.m to the following:
 
   % Read RMP info on BOUT++ grid either from mat file or from grid file
 
   rmp=load('apar_kstar_30306_7850_psi085105_nx260ny128_f2_nz256.mat');
 
    if (divertor == 0)
        [apar0,dapardx0,dapardy0,dapardz0] = ...
            get_apar_sc(rmp.apar,bxy,psixy,zShift,sa,sinty,dy0,dz,...
            zperiod,0,1,1);
    elseif (divertor == 1)
        [apar0,dapardx0,dapardy0,dapardz0] = ...
            get_apar(rmp.apar,bxy,psixy,zShift,sa,sinty,dy0,dz,...
            ixsep,nypf1,nypf2,zperiod,0,0,1);
 
Please let me know if this works.